image: docker:latest

services:
  - docker:19-dind

stages:
  - build-back
  - release-back
  - build-front
  - release-front
  - deploy
  - build-timer
  - release-timer


variables:
  SERVICE: challenge_inte

build-back:
  stage: build-back
  tags:
    - docker
  only:
    - tags
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

    - export TEST_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - export RELEASE_IMAGE=$CI_REGISTRY_IMAGE:latest-back
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest-back || true
    - docker build -t $TEST_IMAGE --cache-from $RELEASE_IMAGE backend
    - docker push $TEST_IMAGE

release-back:
  stage: release-back
  tags:
    - docker
  only:
    - tags
  variables:
    GIT_STRATEGY: none
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export TEST_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - export RELEASE_IMAGE=$CI_REGISTRY_IMAGE:latest-back
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE

build-front:
  stage: build-front
  tags:
    - docker
  only:
    - tags
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

    - export TEST_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - export RELEASE_IMAGE=$CI_REGISTRY_IMAGE:latest-front
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest-front || true
    - docker build -t $TEST_IMAGE --cache-from $RELEASE_IMAGE frontend
    - docker push $TEST_IMAGE

release-front:
  stage: release-front
  tags:
    - docker
  only:
    - tags
  variables:
    GIT_STRATEGY: none
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export TEST_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - export RELEASE_IMAGE=$CI_REGISTRY_IMAGE:latest-front
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE


deploy:
  stage: deploy
  tags:
    - docker
  only:
    - tags
  variables:
    GIT_STRATEGY: none
  script:
    - 'wget --header "service: challenge_inte" --header "webhook-token: $WEBHOOK_TOKEN" http://wordchamp.info:9001/hooks/deploy'

build-timer:
  stage: build-timer
  tags:
    - docker
  only:
    - tags
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

    - export TEST_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - export RELEASE_IMAGE=$CI_REGISTRY_IMAGE:latest-timer
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest-timer || true
    - docker build -t $TEST_IMAGE --cache-from $RELEASE_IMAGE timer
    - docker push $TEST_IMAGE

release-timer:
  stage: release-timer
  tags:
    - docker
  only:
    - tags
  variables:
    GIT_STRATEGY: none
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export TEST_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - export RELEASE_IMAGE=$CI_REGISTRY_IMAGE:latest-timer
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE